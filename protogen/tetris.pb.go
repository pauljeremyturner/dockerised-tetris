// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.26.1
// source: proto/tetris.proto

package protogen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Square_ColorEnum int32

const (
	Square_MAGENTA Square_ColorEnum = 0
	Square_CYAN    Square_ColorEnum = 1
	Square_YELLOW  Square_ColorEnum = 2
	Square_GREEN   Square_ColorEnum = 3
	Square_BLUE    Square_ColorEnum = 4
	Square_RED     Square_ColorEnum = 5
	Square_WHITE   Square_ColorEnum = 6
	Square_BLACK   Square_ColorEnum = 7
)

// Enum value maps for Square_ColorEnum.
var (
	Square_ColorEnum_name = map[int32]string{
		0: "MAGENTA",
		1: "CYAN",
		2: "YELLOW",
		3: "GREEN",
		4: "BLUE",
		5: "RED",
		6: "WHITE",
		7: "BLACK",
	}
	Square_ColorEnum_value = map[string]int32{
		"MAGENTA": 0,
		"CYAN":    1,
		"YELLOW":  2,
		"GREEN":   3,
		"BLUE":    4,
		"RED":     5,
		"WHITE":   6,
		"BLACK":   7,
	}
)

func (x Square_ColorEnum) Enum() *Square_ColorEnum {
	p := new(Square_ColorEnum)
	*p = x
	return p
}

func (x Square_ColorEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Square_ColorEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_tetris_proto_enumTypes[0].Descriptor()
}

func (Square_ColorEnum) Type() protoreflect.EnumType {
	return &file_proto_tetris_proto_enumTypes[0]
}

func (x Square_ColorEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Square_ColorEnum.Descriptor instead.
func (Square_ColorEnum) EnumDescriptor() ([]byte, []int) {
	return file_proto_tetris_proto_rawDescGZIP(), []int{1, 0}
}

type MoveRequest_MoveEnum int32

const (
	MoveRequest_DROP        MoveRequest_MoveEnum = 0
	MoveRequest_MOVELEFT    MoveRequest_MoveEnum = 1
	MoveRequest_MOVERIGHT   MoveRequest_MoveEnum = 2
	MoveRequest_ROTATELEFT  MoveRequest_MoveEnum = 3
	MoveRequest_ROTATERIGHT MoveRequest_MoveEnum = 4
	MoveRequest_DOWN        MoveRequest_MoveEnum = 5
)

// Enum value maps for MoveRequest_MoveEnum.
var (
	MoveRequest_MoveEnum_name = map[int32]string{
		0: "DROP",
		1: "MOVELEFT",
		2: "MOVERIGHT",
		3: "ROTATELEFT",
		4: "ROTATERIGHT",
		5: "DOWN",
	}
	MoveRequest_MoveEnum_value = map[string]int32{
		"DROP":        0,
		"MOVELEFT":    1,
		"MOVERIGHT":   2,
		"ROTATELEFT":  3,
		"ROTATERIGHT": 4,
		"DOWN":        5,
	}
)

func (x MoveRequest_MoveEnum) Enum() *MoveRequest_MoveEnum {
	p := new(MoveRequest_MoveEnum)
	*p = x
	return p
}

func (x MoveRequest_MoveEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MoveRequest_MoveEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_tetris_proto_enumTypes[1].Descriptor()
}

func (MoveRequest_MoveEnum) Type() protoreflect.EnumType {
	return &file_proto_tetris_proto_enumTypes[1]
}

func (x MoveRequest_MoveEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MoveRequest_MoveEnum.Descriptor instead.
func (MoveRequest_MoveEnum) EnumDescriptor() ([]byte, []int) {
	return file_proto_tetris_proto_rawDescGZIP(), []int{4, 0}
}

// [paul@localhost dockerised-tetris]$ protoc - protoc --go-grpc_out=./protogen
type NewGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerName string `protobuf:"bytes,1,opt,name=playerName,proto3" json:"playerName,omitempty"`
	Uuid       string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *NewGameRequest) Reset() {
	*x = NewGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tetris_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewGameRequest) ProtoMessage() {}

func (x *NewGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tetris_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewGameRequest.ProtoReflect.Descriptor instead.
func (*NewGameRequest) Descriptor() ([]byte, []int) {
	return file_proto_tetris_proto_rawDescGZIP(), []int{0}
}

func (x *NewGameRequest) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *NewGameRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type Square struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X     uint32           `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y     uint32           `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	Color Square_ColorEnum `protobuf:"varint,3,opt,name=color,proto3,enum=Square_ColorEnum" json:"color,omitempty"`
}

func (x *Square) Reset() {
	*x = Square{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tetris_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Square) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Square) ProtoMessage() {}

func (x *Square) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tetris_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Square.ProtoReflect.Descriptor instead.
func (*Square) Descriptor() ([]byte, []int) {
	return file_proto_tetris_proto_rawDescGZIP(), []int{1}
}

func (x *Square) GetX() uint32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Square) GetY() uint32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Square) GetColor() Square_ColorEnum {
	if x != nil {
		return x.Color
	}
	return Square_MAGENTA
}

type GameUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid       string    `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	PlayerName string    `protobuf:"bytes,2,opt,name=playerName,proto3" json:"playerName,omitempty"`
	GameOver   bool      `protobuf:"varint,3,opt,name=gameOver,proto3" json:"gameOver,omitempty"`
	Lines      uint32    `protobuf:"varint,4,opt,name=lines,proto3" json:"lines,omitempty"`
	Pieces     uint32    `protobuf:"varint,5,opt,name=pieces,proto3" json:"pieces,omitempty"`
	Duration   int64     `protobuf:"varint,6,opt,name=duration,proto3" json:"duration,omitempty"`
	Squares    []*Square `protobuf:"bytes,7,rep,name=squares,proto3" json:"squares,omitempty"`
	NextPiece  []*Square `protobuf:"bytes,8,rep,name=nextPiece,proto3" json:"nextPiece,omitempty"`
}

func (x *GameUpdateResponse) Reset() {
	*x = GameUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tetris_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameUpdateResponse) ProtoMessage() {}

func (x *GameUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tetris_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameUpdateResponse.ProtoReflect.Descriptor instead.
func (*GameUpdateResponse) Descriptor() ([]byte, []int) {
	return file_proto_tetris_proto_rawDescGZIP(), []int{2}
}

func (x *GameUpdateResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GameUpdateResponse) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *GameUpdateResponse) GetGameOver() bool {
	if x != nil {
		return x.GameOver
	}
	return false
}

func (x *GameUpdateResponse) GetLines() uint32 {
	if x != nil {
		return x.Lines
	}
	return 0
}

func (x *GameUpdateResponse) GetPieces() uint32 {
	if x != nil {
		return x.Pieces
	}
	return 0
}

func (x *GameUpdateResponse) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *GameUpdateResponse) GetSquares() []*Square {
	if x != nil {
		return x.Squares
	}
	return nil
}

func (x *GameUpdateResponse) GetNextPiece() []*Square {
	if x != nil {
		return x.NextPiece
	}
	return nil
}

type MoveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MoveResponse) Reset() {
	*x = MoveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tetris_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveResponse) ProtoMessage() {}

func (x *MoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tetris_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveResponse.ProtoReflect.Descriptor instead.
func (*MoveResponse) Descriptor() ([]byte, []int) {
	return file_proto_tetris_proto_rawDescGZIP(), []int{3}
}

type MoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string               `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Move MoveRequest_MoveEnum `protobuf:"varint,2,opt,name=move,proto3,enum=MoveRequest_MoveEnum" json:"move,omitempty"`
}

func (x *MoveRequest) Reset() {
	*x = MoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tetris_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveRequest) ProtoMessage() {}

func (x *MoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tetris_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveRequest.ProtoReflect.Descriptor instead.
func (*MoveRequest) Descriptor() ([]byte, []int) {
	return file_proto_tetris_proto_rawDescGZIP(), []int{4}
}

func (x *MoveRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *MoveRequest) GetMove() MoveRequest_MoveEnum {
	if x != nil {
		return x.Move
	}
	return MoveRequest_DROP
}

var File_proto_tetris_proto protoreflect.FileDescriptor

var file_proto_tetris_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x65, 0x74, 0x72, 0x69, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x44, 0x0a, 0x0e, 0x4e, 0x65, 0x77, 0x47, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0xb1, 0x01, 0x0a, 0x06, 0x53,
	0x71, 0x75, 0x61, 0x72, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01,
	0x79, 0x12, 0x27, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x11, 0x2e, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x45,
	0x6e, 0x75, 0x6d, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x62, 0x0a, 0x09, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x41, 0x47, 0x45, 0x4e,
	0x54, 0x41, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x59, 0x41, 0x4e, 0x10, 0x01, 0x12, 0x0a,
	0x0a, 0x06, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x52,
	0x45, 0x45, 0x4e, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x4c, 0x55, 0x45, 0x10, 0x04, 0x12,
	0x07, 0x0a, 0x03, 0x52, 0x45, 0x44, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x57, 0x48, 0x49, 0x54,
	0x45, 0x10, 0x06, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x10, 0x07, 0x22, 0xf8,
	0x01, 0x0a, 0x12, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61, 0x6d,
	0x65, 0x4f, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x67, 0x61, 0x6d,
	0x65, 0x4f, 0x76, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x69, 0x65, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x69, 0x65,
	0x63, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x21, 0x0a, 0x07, 0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x07, 0x2e, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x52, 0x07, 0x73, 0x71, 0x75, 0x61, 0x72,
	0x65, 0x73, 0x12, 0x25, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x69, 0x65, 0x63, 0x65, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x52, 0x09,
	0x6e, 0x65, 0x78, 0x74, 0x50, 0x69, 0x65, 0x63, 0x65, 0x22, 0x0e, 0x0a, 0x0c, 0x4d, 0x6f, 0x76,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xaa, 0x01, 0x0a, 0x0b, 0x4d, 0x6f,
	0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a,
	0x04, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x4d, 0x6f,
	0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x45, 0x6e,
	0x75, 0x6d, 0x52, 0x04, 0x6d, 0x6f, 0x76, 0x65, 0x22, 0x5c, 0x0a, 0x08, 0x4d, 0x6f, 0x76, 0x65,
	0x45, 0x6e, 0x75, 0x6d, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x52, 0x4f, 0x50, 0x10, 0x00, 0x12, 0x0c,
	0x0a, 0x08, 0x4d, 0x4f, 0x56, 0x45, 0x4c, 0x45, 0x46, 0x54, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x4d, 0x4f, 0x56, 0x45, 0x52, 0x49, 0x47, 0x48, 0x54, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x52,
	0x4f, 0x54, 0x41, 0x54, 0x45, 0x4c, 0x45, 0x46, 0x54, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x52,
	0x4f, 0x54, 0x41, 0x54, 0x45, 0x52, 0x49, 0x47, 0x48, 0x54, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04,
	0x44, 0x4f, 0x57, 0x4e, 0x10, 0x05, 0x32, 0x2d, 0x0a, 0x04, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x25,
	0x0a, 0x04, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x0c, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x3d, 0x0a, 0x04, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a,
	0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x0f, 0x2e, 0x4e, 0x65, 0x77,
	0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x30, 0x01, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_tetris_proto_rawDescOnce sync.Once
	file_proto_tetris_proto_rawDescData = file_proto_tetris_proto_rawDesc
)

func file_proto_tetris_proto_rawDescGZIP() []byte {
	file_proto_tetris_proto_rawDescOnce.Do(func() {
		file_proto_tetris_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_tetris_proto_rawDescData)
	})
	return file_proto_tetris_proto_rawDescData
}

var file_proto_tetris_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_tetris_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_tetris_proto_goTypes = []interface{}{
	(Square_ColorEnum)(0),      // 0: Square.ColorEnum
	(MoveRequest_MoveEnum)(0),  // 1: MoveRequest.MoveEnum
	(*NewGameRequest)(nil),     // 2: NewGameRequest
	(*Square)(nil),             // 3: Square
	(*GameUpdateResponse)(nil), // 4: GameUpdateResponse
	(*MoveResponse)(nil),       // 5: MoveResponse
	(*MoveRequest)(nil),        // 6: MoveRequest
}
var file_proto_tetris_proto_depIdxs = []int32{
	0, // 0: Square.color:type_name -> Square.ColorEnum
	3, // 1: GameUpdateResponse.squares:type_name -> Square
	3, // 2: GameUpdateResponse.nextPiece:type_name -> Square
	1, // 3: MoveRequest.move:type_name -> MoveRequest.MoveEnum
	6, // 4: Move.Move:input_type -> MoveRequest
	2, // 5: Game.StartGame:input_type -> NewGameRequest
	5, // 6: Move.Move:output_type -> MoveResponse
	4, // 7: Game.StartGame:output_type -> GameUpdateResponse
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_tetris_proto_init() }
func file_proto_tetris_proto_init() {
	if File_proto_tetris_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_tetris_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tetris_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Square); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tetris_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tetris_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tetris_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_tetris_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_tetris_proto_goTypes,
		DependencyIndexes: file_proto_tetris_proto_depIdxs,
		EnumInfos:         file_proto_tetris_proto_enumTypes,
		MessageInfos:      file_proto_tetris_proto_msgTypes,
	}.Build()
	File_proto_tetris_proto = out.File
	file_proto_tetris_proto_rawDesc = nil
	file_proto_tetris_proto_goTypes = nil
	file_proto_tetris_proto_depIdxs = nil
}
